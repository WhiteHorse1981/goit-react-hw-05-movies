{"version":3,"file":"static/js/273.8bda7bae.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/OneMovie/OneMovie.module.css?11f8","pages/OneMovie/OneMovie.jsx","components/GoBack/GoBack.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MovieImg\":\"OneMovie_MovieImg__JVoUS\",\"BoxMovie\":\"OneMovie_BoxMovie__5LXW1\",\"NameMovie\":\"OneMovie_NameMovie__s0zSP\",\"VoteMovie\":\"OneMovie_VoteMovie__s8SrC\",\"OverviewMovie\":\"OneMovie_OverviewMovie__HBkBv\",\"GenresMovie\":\"OneMovie_GenresMovie__WAJfF\",\"Information\":\"OneMovie_Information__S3xG8\",\"ListInformationMovie\":\"OneMovie_ListInformationMovie__n+0j7\"};","import { NavLink, Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './OneMovie.module.css';\nimport { nanoid } from 'nanoid';\n\nconst OneMovie = ({ movie }) => {\n  const {\n    poster_path,\n    title,\n    overview,\n    genres,\n    release_date,\n    first_air_date,\n    name,\n    vote_average,\n  } = movie;\n  const date = new Date(release_date ? release_date : first_air_date);\n  const rating = Math.round(vote_average * 10);\n  const year = date.getFullYear();\n  const titleMovie = title ? title : name;\n  const photo = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : 'https://nuft.edu.ua/assets/images/people/no-image.jpg';\n\n  return (\n    <>\n      <div className={css.BoxMovie}>\n        <div>\n          <img src={photo} alt={titleMovie} className={css.MovieImg} />\n        </div>\n        <div>\n          <ul className={css.ListInformationMovie}>\n            <li className={css.NameMovie}>\n              <h2>{titleMovie}</h2>\n              <p>( {year} )</p>\n            </li>\n            <li className={css.VoteMovie}>\n              <h3>User Score: </h3>\n              <p>{rating}%</p>\n            </li>\n            <li className={css.OverviewMovie}>\n              <h3>Overview</h3>\n              <p>{overview}</p>\n            </li>\n            <li className={css.GenresMovie}>\n              <h3>Genres</h3>\n              <p>\n                {genres.map(genre => {\n                  return <span key={nanoid()}>{genre?.name}</span>;\n                })}\n              </p>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <hr />\n\n      <p className={css.Information}> Additional information</p>\n      <ul>\n        <li>\n          <NavLink to=\"cast\">Cast</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"reviews\">Reviews</NavLink>\n        </li>\n      </ul>\n\n      <Outlet />\n    </>\n  );\n};\n\nOneMovie.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n\nexport default OneMovie;\n","import { Link, useLocation } from 'react-router-dom';\nfunction GoBack() {\n  const location = useLocation();\n  return <Link to={location.state?.from ?? '/'}>GoBack</Link>;\n}\n\nexport default GoBack;\n","import { useParams } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport * as movieAPI from '../../services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport OneMovie from '../OneMovie/OneMovie';\nimport GoBack from 'components/GoBack/GoBack';\n\nfunction MovieDetails() {\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovie = async () => {\n      try {\n        setIsLoading(true);\n        const data = await movieAPI.getDetailsMovies(movieId);\n        setMovie(data);\n        // console.log(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovie();\n  }, [movieId]);\n  return (\n    <>\n      <GoBack />\n      {error && <p>Server request failed. Try again.</p>}\n      {(movie !== null && <OneMovie movie={movie} />) || (\n        <p>Unfortunately there is no information about this film.</p>\n      )}\n      {isLoading && <Loader />}\n    </>\n  );\n}\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst themoviedbApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'a3d945b8f328c6538b57f110a6218b6e',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await themoviedbApi.get('trending/all/day');\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await themoviedbApi.get('search/movie', {\n    params: {\n      query: query,\n      language: 'en-US',\n      page: 1,\n      include_adult: false,\n    },\n    //`search/movie${query}&language=en-US&page=1&include_adult=false`\n  });\n  return data;\n};\n\nexport const getDetailsMovies = async movieId => {\n  const { data } = await themoviedbApi.get(`movie/${movieId}`, {\n    params: {\n      language: 'en-US',\n    },\n    //https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n  });\n  return data;\n};\n\nexport const getCastMovies = async movieId => {\n  const { data } = await themoviedbApi.get(`movie/${movieId}/credits`, {\n    params: {\n      language: 'en-US',\n    },\n    //https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n  });\n  return data;\n};\n\nexport const getReviewsMovies = async movieId => {\n  const { data } = await themoviedbApi.get(`movie/${movieId}/reviews`, {\n    params: {\n      language: 'en-US',\n      page: 1,\n    },\n    //https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n  });\n  return data;\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["movie","poster_path","title","overview","genres","release_date","first_air_date","name","vote_average","date","Date","rating","Math","round","year","getFullYear","titleMovie","photo","className","css","src","alt","map","genre","nanoid","to","location","useLocation","state","from","useState","setMovie","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","fetchMovie","movieAPI","data","message","Loader","themoviedbApi","axios","baseURL","params","api_key","getTrendingMovies","get","getSearchMovies","query","language","page","include_adult","getDetailsMovies","getCastMovies","getReviewsMovies","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase"],"sourceRoot":""}