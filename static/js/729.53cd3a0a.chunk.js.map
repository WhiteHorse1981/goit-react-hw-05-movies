{"version":3,"file":"static/js/729.53cd3a0a.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Title\":\"MovieList_Title__T5U9i\",\"ListStyle\":\"MovieList_ListStyle__qnSDe\",\"ListItem\":\"MovieList_ListItem__0Tdm7\",\"ListItemLink\":\"MovieList_ListItemLink__+kzcJ\",\"BoxList\":\"MovieList_BoxList__Dcx8-\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MovieList.module.css';\nimport { HiVideoCamera } from 'react-icons/hi2';\n\nfunction MovieList({ movies }) {\n  const location = useLocation();\n  return (\n    <main className={css.BoxList}>\n      <h2 className={css.Title}>Trending today</h2>\n      <ul className={css.ListStyle}>\n        {movies.map(movie => (\n          <li className={css.ListItem} key={movie.id}>\n            <Link\n              className={css.ListItemLink}\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n            >\n              <HiVideoCamera />\n              {movie.name ? movie.name : movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </main>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"SearchBar_SearchForm__J+i1a\",\"InputSearchBar\":\"SearchBar_InputSearchBar__P4TeU\",\"BtnForm\":\"SearchBar_BtnForm__smbiP\"};","import { useSearchParams } from 'react-router-dom';\nimport css from './SearchBar.module.css';\nimport React, { useState } from 'react';\n\nexport const SearchBar = ({ onSubmit }) => {\n  // eslint-disable-next-line no-unused-vars\n  const [searchParams, setSearchParams] = useSearchParams();\n  const params = searchParams.get('query');\n  const [query, setQuery] = useState(params ?? '');\n  const hendleChange = e => {\n    setQuery(e.target.value);\n  };\n  const handlerFormSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n  };\n  return (\n    <section>\n      <form className={css.SearchForm} onSubmit={handlerFormSubmit}>\n        <input\n          className={css.InputSearchBar}\n          type=\"text\"\n          value={query}\n          onChange={hendleChange}\n        />\n        <button className={css.BtnForm} type=\"submit\">\n          Search\n        </button>\n      </form>\n    </section>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport React, { useEffect, useState } from 'react';\nimport * as movieAPI from '../../services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\n\nfunction Movies() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchedMovies, setSearchedMovies] = useState(null);\n  // eslint-disable-next-line no-unused-vars\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const params = searchParams.get('query');\n\n  const onSubmit = movies => {\n    setSearchParams({ query: movies });\n  };\n\n  useEffect(() => {\n    if (params === null) return;\n\n    const fetchSearchMovies = async () => {\n      try {\n        setIsLoading(true);\n        const data = await movieAPI.getSearchMovies(params);\n        setSearchedMovies(data.results);\n      } catch (error) {\n        // console.log(error);\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchSearchMovies();\n  }, [params]);\n  return (\n    <>\n      <SearchBar onSubmit={onSubmit} />\n      {searchedMovies?.length === 0 && params && (\n        <p>Server request failed. Try again.</p>\n      )}\n      {searchedMovies && <MovieList movies={searchedMovies} />}\n      {isLoading && <Loader />}\n    </>\n  );\n}\nexport default Movies;\n","import axios from 'axios';\n\nconst themoviedbApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'a3d945b8f328c6538b57f110a6218b6e',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await themoviedbApi.get('trending/all/day');\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await themoviedbApi.get('search/movie', {\n    params: {\n      query: query,\n      language: 'en-US',\n      page: 1,\n      include_adult: false,\n    },\n    //`search/movie${query}&language=en-US&page=1&include_adult=false`\n  });\n  return data;\n};\n\nexport const getDetailsMovies = async movieId => {\n  const { data } = await themoviedbApi.get(`movie/${movieId}`, {\n    params: {\n      language: 'en-US',\n    },\n    //https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n  });\n  return data;\n};\n\nexport const getCastMovies = async movieId => {\n  const { data } = await themoviedbApi.get(`movie/${movieId}/credits`, {\n    params: {\n      language: 'en-US',\n    },\n    //https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n  });\n  return data;\n};\n\nexport const getReviewsMovies = async movieId => {\n  const { data } = await themoviedbApi.get(`movie/${movieId}/reviews`, {\n    params: {\n      language: 'en-US',\n      page: 1,\n    },\n    //https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n  });\n  return data;\n};\n"],"names":["movies","location","useLocation","className","css","map","movie","to","id","state","from","name","title","SearchBar","onSubmit","useSearchParams","searchParams","params","get","useState","query","setQuery","e","preventDefault","type","value","onChange","target","isLoading","setIsLoading","searchedMovies","setSearchedMovies","setError","setSearchParams","useEffect","fetchSearchMovies","movieAPI","data","results","message","length","MovieList","Loader","themoviedbApi","axios","baseURL","api_key","getTrendingMovies","getSearchMovies","language","page","include_adult","getDetailsMovies","movieId","getCastMovies","getReviewsMovies"],"sourceRoot":""}