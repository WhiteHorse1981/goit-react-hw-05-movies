{"version":3,"file":"static/js/459.63f30f28.chunk.js","mappings":"+PACA,GAAgB,QAAU,sBAAsB,SAAW,wB,SCyD3D,MApDA,WACE,OAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAcK,GAAd,WACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAEA,IAAMG,EAAU,mCAAG,oGAEfL,GAAa,GAFE,SAGIM,EAAAA,GAAuBJ,GAH3B,OAGTK,EAHS,OAIfT,EAAQS,EAAKV,MAJE,gDAOfI,EAAS,KAAMO,SAPA,yBASfR,GAAa,GATE,4EAAH,qDAahBK,GAfoB,CAgBrB,GAAE,CAACH,KAEF,gCACGL,IACC,wBACGA,IACC,wBACGA,EAAKY,KAAI,SAAAC,GACR,IAAMC,EAAQD,EAAKE,aAAL,yCACwBF,EAAKE,cACvC,wDAEJ,OACE,gBAAkBC,UAAWC,EAAAA,SAA7B,WACE,gBAAKC,IAAKJ,EAAOK,IAAKN,EAAKO,KAAMJ,UAAWC,EAAAA,WAC5C,eAAGD,UAAWC,EAAAA,SAAd,eAA+BJ,EAAKO,SACpC,8BAAMP,EAAKQ,eAHJR,EAAKS,GAMjB,QAKRpB,IAAa,SAACqB,EAAA,EAAD,MAGnB,C,sLCvDKC,E,OAAgBC,EAAAA,OAAa,CACjCC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAiB,mCAAG,sGACRL,EAAcM,IAAI,oBADV,uBACvBpB,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBqB,EAAe,mCAAG,WAAMC,GAAN,yFACNR,EAAcM,IAAI,eAAgB,CACvDH,OAAQ,CACNK,MAAOA,EACPC,SAAU,QACVC,KAAM,EACNC,eAAe,KANU,uBACrBzB,EADqB,EACrBA,KADqB,kBAUtBA,GAVsB,2CAAH,sDAaf0B,EAAgB,mCAAG,WAAM/B,GAAN,yFACPmB,EAAcM,IAAd,gBAA2BzB,GAAW,CAC3DsB,OAAQ,CACNM,SAAU,WAHgB,uBACtBvB,EADsB,EACtBA,KADsB,kBAOvBA,GAPuB,2CAAH,sDAUhB2B,EAAa,mCAAG,WAAMhC,GAAN,yFACJmB,EAAcM,IAAd,gBAA2BzB,EAA3B,YAA8C,CACnEsB,OAAQ,CACNM,SAAU,WAHa,uBACnBvB,EADmB,EACnBA,KADmB,kBAOpBA,GAPoB,2CAAH,sDAUb4B,EAAgB,mCAAG,WAAMjC,GAAN,yFACPmB,EAAcM,IAAd,gBAA2BzB,EAA3B,YAA8C,CACnEsB,OAAQ,CACNM,SAAU,QACVC,KAAM,KAJoB,uBACtBxB,EADsB,EACtBA,KADsB,kBAQvBA,GARuB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"CastImg\":\"Cast_CastImg__3WhU2\",\"CastItem\":\"Cast_CastItem__Ans2u\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as movieAPI from '../../services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './Cast.module.css';\n\nfunction CastPage() {\n  const [cast, setCast] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  // eslint-disable-next-line no-unused-vars\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  // console.log(movieId);\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovie = async () => {\n      try {\n        setIsLoading(true);\n        const data = await movieAPI.getCastMovies(movieId);\n        setCast(data.cast);\n        // console.log(data.cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovie();\n  }, [movieId]);\n  return (\n    <>\n      {cast && (\n        <ul>\n          {cast && (\n            <ul>\n              {cast.map(role => {\n                const photo = role.profile_path\n                  ? `https://image.tmdb.org/t/p/w500${role.profile_path}`\n                  : 'https://nuft.edu.ua/assets/images/people/no-image.jpg';\n\n                return (\n                  <li key={role.id} className={css.CastItem}>\n                    <img src={photo} alt={role.name} className={css.CastImg} />\n                    <p className={css.CastName}>- {role.name}</p>\n                    <p>- {role.character}</p>\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n        </ul>\n      )}\n      {isLoading && <Loader />}\n    </>\n  );\n}\nexport default CastPage;\n","import axios from 'axios';\n\nconst themoviedbApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'a3d945b8f328c6538b57f110a6218b6e',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await themoviedbApi.get('trending/all/day');\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await themoviedbApi.get('search/movie', {\n    params: {\n      query: query,\n      language: 'en-US',\n      page: 1,\n      include_adult: false,\n    },\n    //`search/movie${query}&language=en-US&page=1&include_adult=false`\n  });\n  return data;\n};\n\nexport const getDetailsMovies = async movieId => {\n  const { data } = await themoviedbApi.get(`movie/${movieId}`, {\n    params: {\n      language: 'en-US',\n    },\n    //https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n  });\n  return data;\n};\n\nexport const getCastMovies = async movieId => {\n  const { data } = await themoviedbApi.get(`movie/${movieId}/credits`, {\n    params: {\n      language: 'en-US',\n    },\n    //https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n  });\n  return data;\n};\n\nexport const getReviewsMovies = async movieId => {\n  const { data } = await themoviedbApi.get(`movie/${movieId}/reviews`, {\n    params: {\n      language: 'en-US',\n      page: 1,\n    },\n    //https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n  });\n  return data;\n};\n"],"names":["useState","cast","setCast","isLoading","setIsLoading","setError","movieId","useParams","useEffect","fetchMovie","movieAPI","data","message","map","role","photo","profile_path","className","css","src","alt","name","character","id","Loader","themoviedbApi","axios","baseURL","params","api_key","getTrendingMovies","get","getSearchMovies","query","language","page","include_adult","getDetailsMovies","getCastMovies","getReviewsMovies"],"sourceRoot":""}