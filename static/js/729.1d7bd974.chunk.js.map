{"version":3,"file":"static/js/729.1d7bd974.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction MovieList({ movies }) {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.name ? movie.name : movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"SearchBar_SearchForm__J+i1a\"};","import { useSearchParams } from 'react-router-dom';\nimport css from './SearchBar.module.css';\nimport React, { useState } from 'react';\n\nexport const SearchBar = ({ onSubmit }) => {\n  // eslint-disable-next-line no-unused-vars\n  const [searchParams, setSearchParams] = useSearchParams();\n  const params = searchParams.get('query');\n  const [query, setQuery] = useState(params ?? '');\n  const hendleChange = e => {\n    setQuery(e.target.value);\n  };\n  const handlerFormSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n  };\n  return (\n    <div>\n      <form className={css.SearchForm} onSubmit={handlerFormSubmit}>\n        <input type=\"text\" value={query} onChange={hendleChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport React, { useEffect, useState } from 'react';\nimport * as movieAPI from '../../services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\n\nfunction Movies() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchedMovies, setSearchedMovies] = useState(null);\n  // eslint-disable-next-line no-unused-vars\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const params = searchParams.get('query');\n\n  const onSubmit = movies => {\n    setSearchParams({ query: movies });\n  };\n\n  useEffect(() => {\n    if (params === null) return;\n\n    const fetchSearchMovies = async () => {\n      try {\n        setIsLoading(true);\n        const data = await movieAPI.getSearchMovies(params);\n        setSearchedMovies(data.results);\n      } catch (error) {\n        // console.log(error);\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchSearchMovies();\n  }, [params]);\n  return (\n    <>\n      <SearchBar onSubmit={onSubmit} />\n      {searchedMovies?.length === 0 && params && (\n        <p>Server request failed. Try again.</p>\n      )}\n      {searchedMovies && <MovieList movies={searchedMovies} />}\n      {isLoading && <Loader />}\n    </>\n  );\n}\nexport default Movies;\n","import axios from 'axios';\n\nconst themoviedbApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'a3d945b8f328c6538b57f110a6218b6e',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await themoviedbApi.get('trending/all/day');\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await themoviedbApi.get('search/movie', {\n    params: {\n      query: query,\n      language: 'en-US',\n      page: 1,\n      include_adult: false,\n    },\n    //`search/movie${query}&language=en-US&page=1&include_adult=false`\n  });\n  return data;\n};\n\nexport const getDetailsMovies = async movieId => {\n  const { data } = await themoviedbApi.get(`movie/${movieId}`, {\n    params: {\n      language: 'en-US',\n    },\n    //https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n  });\n  return data;\n};\n\nexport const getCastMovies = async movieId => {\n  const { data } = await themoviedbApi.get(`movie/${movieId}/credits`, {\n    params: {\n      language: 'en-US',\n    },\n    //https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n  });\n  return data;\n};\n\nexport const getReviewsMovies = async movieId => {\n  const { data } = await themoviedbApi.get(`movie/${movieId}/reviews`, {\n    params: {\n      language: 'en-US',\n      page: 1,\n    },\n    //https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n  });\n  return data;\n};\n"],"names":["movies","location","useLocation","map","movie","to","id","state","from","name","title","SearchBar","onSubmit","useSearchParams","searchParams","params","get","useState","query","setQuery","className","css","e","preventDefault","type","value","onChange","target","isLoading","setIsLoading","searchedMovies","setSearchedMovies","setError","setSearchParams","useEffect","fetchSearchMovies","movieAPI","data","results","message","length","MovieList","Loader","themoviedbApi","axios","baseURL","api_key","getTrendingMovies","getSearchMovies","language","page","include_adult","getDetailsMovies","movieId","getCastMovies","getReviewsMovies"],"sourceRoot":""}