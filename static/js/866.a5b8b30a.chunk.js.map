{"version":3,"file":"static/js/866.a5b8b30a.chunk.js","mappings":"sQACA,EAA6B,4BAA7B,EAAwE,8BAAxE,EAAsH,+B,mBCiDtH,MA3CA,WACE,OAA8BA,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAcG,GAAd,WACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAEA,IAAMG,EAAiB,mCAAG,6GAEHC,EAAAA,GAA0BJ,GAFvB,OAEhBK,EAFgB,OAGtBP,EAAWO,EAAKC,SAHM,gDAKtBP,EAAS,KAAMQ,SALO,yDAAH,qDASvBJ,GAXoB,CAYrB,GAAE,CAACH,IAECH,GAIH,+BACE,wBACGA,EAAQW,OAAS,EAChBX,EAAQY,KAAI,SAAAC,GACV,OACE,gBAAmBC,UAAWC,EAA9B,WACE,eAAGD,UAAWC,EAAd,qBAAyCF,EAAOG,WAChD,cAAGF,UAAWC,EAAd,SAAkCF,EAAOI,aAFlCC,EAAAA,EAAAA,MAKZ,KAED,0EAfC,SAACC,EAAA,EAAD,GAoBV,C,yLC/CKC,E,QAAgBC,EAAAA,OAAa,CACjCC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAiB,mCAAG,sGACRL,EAAcM,IAAI,oBADV,uBACvBlB,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBmB,EAAe,mCAAG,WAAMC,GAAN,yFACNR,EAAcM,IAAI,eAAgB,CACvDH,OAAQ,CACNK,MAAOA,EACPC,SAAU,QACVC,KAAM,EACNC,eAAe,KANU,uBACrBvB,EADqB,EACrBA,KADqB,kBAUtBA,GAVsB,2CAAH,sDAafwB,EAAgB,mCAAG,WAAM7B,GAAN,yFACPiB,EAAcM,IAAd,gBAA2BvB,GAAW,CAC3DoB,OAAQ,CACNM,SAAU,WAHgB,uBACtBrB,EADsB,EACtBA,KADsB,kBAOvBA,GAPuB,2CAAH,sDAUhByB,EAAa,mCAAG,WAAM9B,GAAN,yFACJiB,EAAcM,IAAd,gBAA2BvB,EAA3B,YAA8C,CACnEoB,OAAQ,CACNM,SAAU,WAHa,uBACnBrB,EADmB,EACnBA,KADmB,kBAOpBA,GAPoB,2CAAH,sDAUb0B,EAAgB,mCAAG,WAAM/B,GAAN,yFACPiB,EAAcM,IAAd,gBAA2BvB,EAA3B,YAA8C,CACnEoB,OAAQ,CACNM,SAAU,QACVC,KAAM,KAJoB,uBACtBtB,EADsB,EACtBA,KADsB,kBAQvBA,GARuB,2CAAH,qD,wDC9CtB,IAkBIU,EAAS,eAACiB,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACC,EAAIC,GAWvD,OARED,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/Reviews/Reviews.module.css?9a3e","pages/Reviews/Reviews.jsx","services/api.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ReviewItem\":\"Reviews_ReviewItem__gDKCV\",\"ReviewAuthor\":\"Reviews_ReviewAuthor__i7GLT\",\"ReviewContent\":\"Reviews_ReviewContent__Qx9zV\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as movieAPI from '../../services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './Reviews.module.css';\nimport { nanoid } from 'nanoid';\n\nfunction ReviewsPage() {\n  const [reviews, setReviews] = useState(null);\n  // eslint-disable-next-line no-unused-vars\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieReviews = async () => {\n      try {\n        const data = await movieAPI.getReviewsMovies(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  if (!reviews) {\n    return <Loader />;\n  }\n  return (\n    <>\n      <ul>\n        {reviews.length > 0 ? (\n          reviews.map(review => {\n            return (\n              <li key={nanoid()} className={css.ReviewItem}>\n                <p className={css.ReviewAuthor}>Author: {review.author}</p>\n                <p className={css.ReviewContent}>{review.content}</p>\n              </li>\n            );\n          })\n        ) : (\n          <p>We don`t have any rewiews for this movie.</p>\n        )}\n      </ul>\n    </>\n  );\n}\nexport default ReviewsPage;\n","import axios from 'axios';\n\nconst themoviedbApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'a3d945b8f328c6538b57f110a6218b6e',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await themoviedbApi.get('trending/all/day');\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await themoviedbApi.get('search/movie', {\n    params: {\n      query: query,\n      language: 'en-US',\n      page: 1,\n      include_adult: false,\n    },\n    //`search/movie${query}&language=en-US&page=1&include_adult=false`\n  });\n  return data;\n};\n\nexport const getDetailsMovies = async movieId => {\n  const { data } = await themoviedbApi.get(`movie/${movieId}`, {\n    params: {\n      language: 'en-US',\n    },\n    //https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n  });\n  return data;\n};\n\nexport const getCastMovies = async movieId => {\n  const { data } = await themoviedbApi.get(`movie/${movieId}/credits`, {\n    params: {\n      language: 'en-US',\n    },\n    //https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n  });\n  return data;\n};\n\nexport const getReviewsMovies = async movieId => {\n  const { data } = await themoviedbApi.get(`movie/${movieId}/reviews`, {\n    params: {\n      language: 'en-US',\n      page: 1,\n    },\n    //https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n  });\n  return data;\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["useState","reviews","setReviews","setError","movieId","useParams","useEffect","fetchMovieReviews","movieAPI","data","results","message","length","map","review","className","css","author","content","nanoid","Loader","themoviedbApi","axios","baseURL","params","api_key","getTrendingMovies","get","getSearchMovies","query","language","page","include_adult","getDetailsMovies","getCastMovies","getReviewsMovies","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase"],"sourceRoot":""}